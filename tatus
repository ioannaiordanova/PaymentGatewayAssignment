[1mdiff --git a/HttpPaymentGatewayBDD/Classes/RestClientBase.cs b/HttpPaymentGatewayBDD/Classes/RestClientBase.cs[m
[1mindex 9069250..b7ef5a6 100644[m
[1m--- a/HttpPaymentGatewayBDD/Classes/RestClientBase.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Classes/RestClientBase.cs[m
[36m@@ -8,19 +8,21 @@[m [mnamespace HttpPaymentGatewayBDD[m
         bool IsAuthorized;[m
         public  RestClientBase(string baseUrl, bool auth) : base()[m
         {[m
[31m-            BaseUrl = new Uri(baseUrl);[m
[32m+[m[32m            BaseUrl = new Uri(baseUrl);[m[41m     [m
             IsAuthorized = auth;[m
[32m+[m[32m            AddHeaders();[m
         }[m
 [m
[31m-        public void AddHeaders() [m
[32m+[m[32m        private void AddHeaders()[m
         {[m
[31m-            this.AddDefaultHeader("Content-Type", ServiceDriver._config["Content-Type"]);[m
[31m-            if (IsAuthorized)[m
[31m-                this.AddDefaultHeader("Authorization", "Basic " + ServiceDriver._config["AuthToken"]);[m
[31m-            else[m
[31m-            {[m
[31m-                this.AddDefaultHeader("Authorization", "Basic " + Helper.GenerateFalseToken());[m
[31m-            }[m
[32m+[m[32m            this.AddDefaultHeader("Content-Type", ServiceDriver.Config["Content-Type"]);[m
[32m+[m[32m            this.AddDefaultHeader("Authorization", "Basic " + getAuthToken());[m
         }[m
[32m+[m
[32m+[m[32m        private string getAuthToken()[m[41m [m
[32m+[m[32m        {[m
[32m+[m[32m           return  IsAuthorized ? ServiceDriver.Config["AuthToken"] : Helper.GenerateFalseToken();[m
[32m+[m[32m        }[m
[32m+[m
     }[m
 }[m
[1mdiff --git a/HttpPaymentGatewayBDD/Classes/TransactionRequestBase.cs b/HttpPaymentGatewayBDD/Classes/TransactionRequestBase.cs[m
[1mindex eb54033..a4a79c6 100644[m
[1m--- a/HttpPaymentGatewayBDD/Classes/TransactionRequestBase.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Classes/TransactionRequestBase.cs[m
[36m@@ -4,30 +4,28 @@[m [mnamespace HttpPaymentGatewayBDD[m
 {[m
     class TransactionRequestBase[m
     {[m
[31m-        private RestClientBase _restClient;[m
[32m+[m[32m        private RestClientBase RestClient;[m
         public IRestResponse Response { get; set; }[m
[31m-        RestRequest restRequest;[m
[32m+[m[32m        private RestRequest RestRequest;[m
         public TransactionRequestBase(string baseUrl, bool auth) [m
         {[m
[31m-            _restClient = new RestClientBase(baseUrl, auth);[m
[31m-            _restClient.AddHeaders();[m
[32m+[m[32m            RestClient = new RestClientBase(baseUrl, auth);[m[41m    [m
            [m
         }[m
 [m
         public void AddBodyParameter(PaymentDetails _body)[m
         {[m
[31m-            Payment _paymentRequest = new Payment() { PaymentTransaction = _body };[m
[31m-            restRequest.AddParameter(ServiceDriver._config["Content-Type"], _paymentRequest.ToJson(), ParameterType.RequestBody);[m
[32m+[m[32m            Payment _paymentRequest = new Payment() { PaymentTransaction = _body };[m[41m          [m
[32m+[m[32m            RestRequest.AddParameter(ServiceDriver.Config["Content-Type"], _paymentRequest.ToJson(), ParameterType.RequestBody);[m
         }[m
 [m
[31m-        public IRestResponse SendPaymentDetails(string _query,PaymentDetails _paymentDetails)[m
[32m+[m[32m        public void SendPaymentDetails(string _query,PaymentDetails _paymentDetails)[m
         {[m
[31m-            restRequest = new RestRequest(_query, Method.POST);[m
[32m+[m[32m            RestRequest = new RestRequest(_query, Method.POST);[m
          [m
             AddBodyParameter(_paymentDetails);[m
             [m
[31m-            Response = _restClient.Post(restRequest);[m
[31m-            return Response;[m
[32m+[m[32m            Response = RestClient.Post(RestRequest);[m
         }[m
     }[m
 }[m
[1mdiff --git a/HttpPaymentGatewayBDD/Drivers/Helper.cs b/HttpPaymentGatewayBDD/Drivers/Helper.cs[m
[1mindex bd69298..217bac8 100644[m
[1m--- a/HttpPaymentGatewayBDD/Drivers/Helper.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Drivers/Helper.cs[m
[36m@@ -7,11 +7,10 @@[m [mnamespace HttpPaymentGatewayBDD[m
 [m
         public static string GenerateFalseToken()[m
         {[m
[31m-            var fixture = new Fixture();[m
[31m-            string _addition = fixture.Create<string>().Substring(0, 5);[m
[31m-            string FalseAuth = ServiceDriver._config["AuthToken"].Substring(0, 35) + _addition;[m
[31m-            FalseAuth = FalseAuth.Replace("0", "1");[m
[31m-           [m
[32m+[m[32m            var fixture = new Fixture();[m[41m       [m
[32m+[m
[32m+[m[32m            string FalseAuth = ServiceDriver.Config["AuthToken"].Substring(0, 35).Replace("0","1") + fixture.Create<string>().Substring(0, 5);[m
[32m+[m[41m            [m
             return FalseAuth;[m
         }[m
 [m
[1mdiff --git a/HttpPaymentGatewayBDD/Drivers/ServiceDriver.cs b/HttpPaymentGatewayBDD/Drivers/ServiceDriver.cs[m
[1mindex fee810a..1b9544d 100644[m
[1m--- a/HttpPaymentGatewayBDD/Drivers/ServiceDriver.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Drivers/ServiceDriver.cs[m
[36m@@ -1,56 +1,56 @@[m
 ï»¿using Microsoft.Extensions.Configuration;[m
 using NUnit.Framework;[m
[31m-using RestSharp;[m
[31m-using System;[m
 [m
 namespace HttpPaymentGatewayBDD[m
 {[m
     public class ServiceDriver[m
     {[m
[31m-        private static TransactionResult _validTransaction, _voidTransaction;[m
[31m-        public static IConfigurationRoot _config;[m
[31m-        TransactionRequestBase _request;[m
[32m+[m[32m        private static TransactionResult ValidTransaction, VoidTransaction;[m
[32m+[m[32m        public static IConfigurationRoot Config;[m
[32m+[m[32m        TransactionRequestBase TransactionRequest;[m
 [m
         public ServiceDriver(bool auth)[m
         {[m
[31m-            _request = new TransactionRequestBase(_config["Uri"], auth);[m
[32m+[m[32m            TransactionRequest = new TransactionRequestBase(Config["Uri"], auth);[m
         }[m
    [m
[31m-        public String TransactSale(PaymentDetails _transaction)[m
[32m+[m[32m        public void TransactSale(PaymentDetails _paymentDetailsModel)[m
         {[m
[31m-            _transaction.TransactionType = _config["Sale"];[m
[31m-            return _request.SendPaymentDetails(_config["Query"],_transaction).Content;[m
[32m+[m[32m            _paymentDetailsModel.TransactionType = Config["Sale"];[m
[32m+[m[32m            TransactionRequest.SendPaymentDetails(Config["Query"],_paymentDetailsModel);[m
         }[m
 [m
[31m-        public string TransactVoid(PaymentDetails _transaction)[m
[32m+[m[32m        public void TransactVoid(PaymentDetails _paymentDetailsModel)[m
         {[m
[31m-            _transaction.TransactionType = _config["Void"];[m
[31m-            return _request.SendPaymentDetails(_config["Query"],_transaction).Content;[m
[32m+[m[32m            _paymentDetailsModel.TransactionType = Config["Void"];[m
[32m+[m[32m            TransactionRequest.SendPaymentDetails(Config["Query"],_paymentDetailsModel);[m
         }[m
 [m
[31m-        public void ValidTransaction(PaymentDetails _transaction)[m
[32m+[m[32m        public void SalesTransaction(PaymentDetails _PaymentDetailsModel)[m
         {[m
[31m-            _validTransaction = TransactionResult.FromJson(TransactSale(_transaction));[m
[32m+[m[32m            TransactSale(_PaymentDetailsModel);[m
[32m+[m[32m            ValidTransaction = TransactionResult.FromJson(TransactionRequest.Response.Content);[m
         }[m
 [m
 [m
         public void AssertStatusCode(int code)[m
         {[m
[31m-            Assert.AreEqual(code, (int)_request.Response.StatusCode);[m
[32m+[m[32m            Assert.AreEqual(code, (int)TransactionRequest.Response.StatusCode);[m
         }[m
 [m
 [m
         public void VoidValidTransaction()[m
         {[m
[31m-            PaymentDetails _transaction = new PaymentDetails() { ReferenceId = _validTransaction.UniqueId };[m
[31m-            _voidTransaction = TransactionResult.FromJson(TransactVoid(_transaction));[m
[32m+[m[32m            PaymentDetails _paymentDetails = new PaymentDetails() { ReferenceId = ValidTransaction.UniqueId };[m
[32m+[m[32m            TransactVoid(_paymentDetails);[m
[32m+[m[32m            VoidTransaction = TransactionResult.FromJson(TransactionRequest.Response.Content);[m
 [m
         }[m
 [m
         public void VoidToVoidTransaction()[m
         {[m
[31m-            PaymentDetails _transaction = new PaymentDetails() { ReferenceId = _voidTransaction.UniqueId };[m
[31m-            TransactVoid(_transaction);[m
[32m+[m[32m            PaymentDetails _paymentDetails = new PaymentDetails() { ReferenceId = VoidTransaction.UniqueId };[m
[32m+[m[32m            TransactVoid(_paymentDetails);[m
         }[m
 [m
     }[m
[1mdiff --git a/HttpPaymentGatewayBDD/Hooks/Hooks.cs b/HttpPaymentGatewayBDD/Hooks/Hooks.cs[m
[1mindex 8b4d157..7f80dea 100644[m
[1m--- a/HttpPaymentGatewayBDD/Hooks/Hooks.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Hooks/Hooks.cs[m
[36m@@ -9,7 +9,7 @@[m [mnamespace HttpPaymentGatewayBDD[m
         [BeforeFeature][m
         public static void BeforeFeature()[m
         {[m
[31m-            ServiceDriver._config = new ConfigurationBuilder().AddJsonFile("conf.json").Build();[m
[32m+[m[32m            ServiceDriver.Config = new ConfigurationBuilder().AddJsonFile("conf.json").Build();[m
         }[m
     }[m
 }[m
[1mdiff --git a/HttpPaymentGatewayBDD/Steps/TransactionsStepsDefinitions.cs b/HttpPaymentGatewayBDD/Steps/TransactionsStepsDefinitions.cs[m
[1mindex 3fa2d44..1f1e6f9 100644[m
[1m--- a/HttpPaymentGatewayBDD/Steps/TransactionsStepsDefinitions.cs[m
[1m+++ b/HttpPaymentGatewayBDD/Steps/TransactionsStepsDefinitions.cs[m
[36m@@ -11,10 +11,7 @@[m [mnamespace HttpPaymentGatewayBDD[m
         [Given(@"I am (.*)authorized")][m
         public void GivenIAmAuthorized(string not)[m
         {[m
[31m-            if (not.Contains("not"))[m
[31m-                _test = new ServiceDriver(false);[m
[31m-            else[m
[31m-                _test = new ServiceDriver(true);[m
[32m+[m[32m            _test = new ServiceDriver(!not.Contains("not"));[m
         }[m
 [m
 [m
[36m@@ -22,7 +19,7 @@[m [mnamespace HttpPaymentGatewayBDD[m
         [System.Obsolete][m
         public void WhenIEnterMyCardDetailsAndTryToMakeASale(Table requestDetails)[m
         {[m
[31m-            _test.ValidTransaction(requestDetails.CreateInstance<PaymentDetails>());[m
[32m+[m[32m            _test.SalesTransaction(requestDetails.CreateInstance<PaymentDetails>());[m
         }[m
 [m
         [When(@"I post my correct payment details:")][m
